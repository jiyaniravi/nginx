user www-data;

# worker_processes : Number of processes at a time nginx could use [Max process = Number of CPU cores]
# worker_processes 2;
worker_processes auto;

events {
   # worker_connections : Number of requests, 1 process/core will handle at a time 
   worker_connections 1024;
}

http {

    include mime.types;

    #--------------------------------------------------------------------------------------------------
    # Request-Response buffering size timeout configurations : Start
    #--------------------------------------------------------------------------------------------------
    client_body_buffer_size 16k;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    
    client_body_timeout 1s;
    client_header_timeout 1s;

    keepalive_timeout 30s;

    send_timeout 5s;

    sendfile on;
    tcp_nopush on;
    #--------------------------------------------------------------------------------------------------
    # Request-Response buffering size timeout configurations : End
    #--------------------------------------------------------------------------------------------------


    server{
        listen 80;
        server_name 172.17.160.201;

        root /home/rjiyani/projects/demo;

        #--------------------------------------------------------------------------------------------------
        # Various paths/location configurations
        #--------------------------------------------------------------------------------------------------
        #prefix match
        location /greet {
            return 200 'Hello from nginx any location starting with /greet';
        }

        #exact match
        location = /greet {
            return 200 'Hello from nginx exact /greet location';
        }

        #regex match, it is case sensitive - use of pcre lib
        location ~ /greet[0-9] {
            return 200 'Hello from nginx regex /greet location';
        }

        #regex match, it is case insensitive - use of pcre lib
         location ~* /greet[0-9] {
             return 200 'Hello from nginx regex /greet location : Case insensetive';
         }

        #Preferential prefix modifier
        location ^~ /Greet2 {
            return 200 'Hello from nginx Preferential prefix modifier /Greet2 location';
        }


        #--------------------------------------------------------------------------------------------------
        # Inspect variable values and query parameters in URL
        #--------------------------------------------------------------------------------------------------
        location /inspect {
            return 200 "$host\n$uri\n$args\n$arg_name";
        }


        #--------------------------------------------------------------------------------------------------
        # Check static API Key
        #--------------------------------------------------------------------------------------------------
        location /validate_login {
            if ( $arg_apikey != 12345 ){
                return 401 'Unauthorised Call!';        
            }

            return 200 'Authorised Call!';
        }

        #--------------------------------------------------------------------------------------------------
        # Create custom variable, change value, use in response 
        #--------------------------------------------------------------------------------------------------
        set $is_weekend 'No';
        if ( $date_local ~ 'Saturday|Sunday' ){
            set $is_weekend 'Yes';
        }
        location /is_weekend {
            return 200 'Is weekend : $is_weekend';
        }

        #--------------------------------------------------------------------------------------------------
        # Redirect/return URL response to another path 
        #--------------------------------------------------------------------------------------------------
        location /logo {
            return 307 /thumb.png;
        }

        #--------------------------------------------------------------------------------------------------
        # Rewrite URL path
        #--------------------------------------------------------------------------------------------------
        # rewrite ^/user/\w+ /greet;
        rewrite ^/user/(\w+) /greet/$1 last;
        rewrite ^/greet/ravi /thumb.png;
        location = /greet/ravi {
            return 200 "Hello Ravi";
        }

        #--------------------------------------------------------------------------------------------------
        # try_files check for existance of file, if it exists irrespective of URL it will be served
        #--------------------------------------------------------------------------------------------------
        #try_files /thumb.png /greet;
        try_files /cat.png /greet;

        #--------------------------------------------------------------------------------------------------
        # Create custom access log file based on URL
        #--------------------------------------------------------------------------------------------------
        location /secure {
            access_log /var/log/nginx/secure.access.log;
            access_log /var/log/nginx/access.log;   # To get access log entries in more than one file
            return 200 "This location is secure!";
        }

        #--------------------------------------------------------------------------------------------------
        # Stop access logs for specific URLs/Files
        #--------------------------------------------------------------------------------------------------
        location /font_files {
            access_log off;
            return 200 "These are the fonts!";
        }
    }


    server{
        listen 80;   
        server_name 172.28.214.134;
        root /home/rjiyani/projects/php-demo;

        index index.php index.html;

        location / {
            try_files $uri $uri/ =404;
        }

        location ~\.php$ {
            # Pass php requests to php-fpm service (fastcgi) 
            # Make sure php${version}-fpm service is up and running in your machine
            include fastcgi.conf;
            fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        }
    }
}
